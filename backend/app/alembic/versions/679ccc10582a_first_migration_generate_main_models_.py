"""First migration. Generate main models, users, projects and other.

Revision ID: 679ccc10582a
Revises: 
Create Date: 2025-08-05 21:59:21.777561

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import app
import app.core
import app.core.database

# revision identifiers, used by Alembic.
revision: str = '679ccc10582a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('full_name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', app.core.database.TZDateTime(), nullable=False),
    sa.Column('updated_at', app.core.database.TZDateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_phone_number'), 'users', ['phone_number'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('visibility', sa.Enum('PRIVATE', 'TEAM', 'PUBLIC', name='projectvisibility'), nullable=False),
    sa.Column('created_at', app.core.database.TZDateTime(), nullable=False),
    sa.Column('updated_at', app.core.database.TZDateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='fk_projects_users_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_owner_id'), 'projects', ['owner_id'], unique=False)
    op.create_table('boards',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('background', sa.String(length=50), nullable=False),
    sa.Column('created_at', app.core.database.TZDateTime(), nullable=False),
    sa.Column('updated_at', app.core.database.TZDateTime(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='fk_boards_projects_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_boards_project_id'), 'boards', ['project_id'], unique=False)
    op.create_table('columns',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('board_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('wip_limit', sa.Integer(), nullable=True),
    sa.Column('created_at', app.core.database.TZDateTime(), nullable=False),
    sa.Column('updated_at', app.core.database.TZDateTime(), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], name='fk_columns_boards_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('column_id', sa.UUID(), nullable=False),
    sa.Column('assignee_id', sa.UUID(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='priority'), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'DONE', name='taskstatus'), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('due_date', app.core.database.TZDateTime(), nullable=False),
    sa.Column('completed_at', app.core.database.TZDateTime(), nullable=True),
    sa.Column('created_at', app.core.database.TZDateTime(), nullable=False),
    sa.Column('updated_at', app.core.database.TZDateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['column_id'], ['columns.id'], name='fk_tasks_columns_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='fk_tasks_users_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_title'), 'tasks', ['title'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('created_at', app.core.database.TZDateTime(), nullable=False),
    sa.Column('updated_at', app.core.database.TZDateTime(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], name='fk_comments_comments_id'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='fk_comments_tasks_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_comments_users_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_assignments',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', app.core.database.TZDateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='fk_task_assignments_tasks_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_task_assignments_users_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('task_id', 'user_id')
    )
    op.create_index(op.f('ix_task_assignments_task_id'), 'task_assignments', ['task_id'], unique=False)
    op.create_index(op.f('ix_task_assignments_user_id'), 'task_assignments', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_assignments_user_id'), table_name='task_assignments')
    op.drop_index(op.f('ix_task_assignments_task_id'), table_name='task_assignments')
    op.drop_table('task_assignments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_tasks_title'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_table('columns')
    op.drop_index(op.f('ix_boards_project_id'), table_name='boards')
    op.drop_table('boards')
    op.drop_index(op.f('ix_projects_owner_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_phone_number'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
